区别：
1.AMD 是 RequireJS 在推广过程中对模块定义的规范化产出。
  CMD 是 SeaJS 在推广过程中对模块定义的规范化产出。

2. 对于依赖的模块，AMD 是提前执行，CMD 是延迟执行。
不过 RequireJS 从 2.0 开始，也改成可以延迟执行（根据写法不同，处理方式不同）。CMD 推崇 as lazy as possible.

3.CMD 推崇依赖就近，AMD 推崇依赖前置。看代码：
// CMDdefine(function(require, exports, module) {
  var a = require('./a')
   a.doSomething()
 // 此处略去 100 行
  var b = require('./b') // 依赖可以就近书写
    b.doSomething()
    // ...
   })

 // AMD 默认推荐的是
 define(['./a', './b'], function(a, b) {
 // 依赖必须一开始就写好
   a.doSomething()
   // 此处略去 100 行
     b.doSomething()    ...
  })
  虽然 AMD 也支持 CMD 的写法，同时还支持将 require 作为依赖项传递，
  但 RequireJS 的作者默认是最喜欢上面的写法，也是官方文档里默认的模块定义写法。


Sea.js和RequireJS的异同：

相同之处
RequireJS 和 Sea.js 都是模块加载器，倡导模块化开发理念，核心价值是让 JavaScript 的模块化开发变得简单自然。

不同之处
两者的主要区别如下：
定位有差异。RequireJS 想成为浏览器端的模块加载器，同时也想成为 Rhino / Node 等环境的模块加载器。Sea.js 则专注于 Web 浏览器端，同时通过 Node 扩展的方式可以很方便跑在 Node 环境中。
遵循的规范不同。RequireJS 遵循 AMD（异步模块定义）规范，Sea.js 遵循 CMD （通用模块定义）规范。规范的不同，导致了两者 API 不同。Sea.js 更贴近 CommonJS Modules/1.1 和 Node Modules 规范。
推广理念有差异。RequireJS 在尝试让第三方类库修改自身来支持 RequireJS，目前只有少数社区采纳。Sea.js 不强推，采用自主封装的方式来“海纳百川”，目前已有较成熟的封装策略。
对开发调试的支持有差异。Sea.js 非常关注代码的开发调试，有 nocache、debug 等用于调试的插件。RequireJS 无这方面的明显支持。
插件机制不同。RequireJS 采取的是在源码中预留接口的形式，插件类型比较单一。Sea.js 采取的是通用事件机制，插件类型更丰富。



NOTE:这些规范的实现都能达成浏览器端模块化开发的目的。